#include <Adafruit_GFX.h> 
#include <Adafruit_SSD1306.h>
#define USE_ARDUINO_INTERRUPTS true
#include <PulseSensorPlayground.h>
const int PulseWire = 0;
const int LED13 = 13;
int Threshold = 550;
PulseSensorPlayground pulseSensor;
// OLED Display Configuration
#define SCREEN_WIDTH 128
#define SCREEN_HEIGHT 32
#define OLED_RESET    -1  // Reset pin (or -1 if you don't have a reset pin)
#define sensorPin A1
Adafruit_SSD1306 display(SCREEN_WIDTH, SCREEN_HEIGHT, &Wire, OLED_RESET);
void setup() {
  Serial.begin(9600);
  pulseSensor.analogInput(PulseWire);
  pulseSensor.blinkOnPulse(LED13);
  pulseSensor.setThreshold(Threshold);
  if (pulseSensor.begin()) {
    Serial.println("PulseSensor object created!");
  }
  // Initialize OLED display
  if (!display.begin(SSD1306_SWITCHCAPVCC, 0x3C))  {
    Serial.println(F("SSD1306 allocation failed"));
    for(;;);
  }
  display.display();
  delay(2000);
  display.clearDisplay();
}
void loop() {
  int myBPM = pulseSensor.getBeatsPerMinute();

  if (pulseSensor.sawStartOfBeat()) {
    // Display BPM on OLED
    display.clearDisplay();
    display.setTextSize(1);
    display.setTextColor(SSD1306_WHITE);
    display.setCursor(0, 0);
    display.print("BPM: ");
    display.println(myBPM);
    if (myBPM<55) {
      display.print("Resting Heart Rate is Low");
    }
    if (myBPM>90) {
      display.print("Resting Heart Rate is High");
    // LM35 Temperature Sensor code
  // Get the voltage reading from the LM35
  int reading = analogRead(sensorPin);

  // Convert that reading into voltage
  float voltage = reading * (5.0 / 1024.0);

  // Convert the voltage into the temperature in Celsius
  float temperatureC = voltage * 100;

  // Print the temperature in Celsius
  float temperatureF = (temperatureC * 9.0 / 5.0) + 32.0;
  display.setTextColor(SSD1306_WHITE);
  display.setTextSize(1);
    display.print("Temperature: ");
    display.println(temperatureF);
    display.print("\xC2\xB0"); // shows degree symbol
    display.print("F");

  delay(500); // wait half a second between readings
  }

  // Check for data from the Serial Monitor
  if (Serial.available() > 0) {
    String data = Serial.readStringUntil('\n'); // Read data until a newline character
    // Print the data on the Serial Monitor
    Serial.println("Received from Serial Monitor: " + data);
  }
  delay(500);
    
  
    display.display();
}
}
